<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <mvc:annotation-driven />
    <context:component-scan base-package="com.hunter.spittr.controller"/>

<!--    &lt;!&ndash;创建一个切面(aspect)，并触发Spring缓存注解的切点(pointcut),&ndash;&gt;
    &lt;!&ndash;根据所使用的注解以及缓存的状态，切面会从缓存中获取数据，将数据添加到缓存之中，或者从缓存中移除某值&ndash;&gt;
    <cache:annotation-driven/>
    &lt;!&ndash;缓存管理器是Spring缓存抽象的核心，能与多个流行的缓存实现进行集成&ndash;&gt;
    <bean id="cacheManager" class="org.springframework." />


    <aop:config>
        <aop:advisor advice-ref="cacheAdvice"
                     pointcut="execution(* com.hunter.spittr.)"
    </aop:config>-->

    <!--
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">

        <property name="basename" value="classpath:ValidationMessages"/>
        <property name="fileEncodings" value="utf-8"/>
        <property name="cacheSeconds" value="120"/>
    </bean>
    -->

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>


    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="viewResolvers">
            <list>
                <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/JSP/"/>
                    <property name="suffix" value=".jsp"/>
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </list>
        </property>
    </bean>

    <!--开通静态资源的访问,否则访问图片、css、js等文件可能出错-->
    <mvc:default-servlet-handler />
    <!--实现静态资源的访问-->
    <!--<mvc:resources location="/CSS/" mapping="/CSS/**"/>-->
    <!--<mvc:resources location="/images/errorpage/" mapping="/image/errorpage/**"/>-->

</beans>